name: Build

on:
  push:
    branches:
      - master


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          
      - name: Install WireGuard
        run: |
          sudo apt-get update 
          sudo apt-get install wireguard
        
      - name: Configure WireGuard
        run: |
          umask 077
          wg genkey > privatekey
          wg pubkey < privatekey > publickey
          echo "[Interface]" > wg0.conf
          echo "Address = 192.168.1.1/24" >> wg0.conf
          echo "ListenPort = 51820" >> wg0.conf
          echo "PrivateKey = $(cat privatekey)" >> wg0.conf
          echo "[Peer]" >> wg0.conf
          echo "PublicKey = $(cat publickey)" >> wg0.conf
          echo "AllowedIPs = 192.168.1.2/32" >> wg0.conf
          echo "Endpoint = <peer_endpoint_ip>:51820" >> wg0.conf
          sudo ip link add dev wg0 type wireguard
          sudo ip address add dev wg0 192.168.1.1/24
          sudo ip link set up dev wg0
          sudo wg-quick up wg0

      - name: Analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=squ_c987907e378b60614a9948db580139ffda6fc419 \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
