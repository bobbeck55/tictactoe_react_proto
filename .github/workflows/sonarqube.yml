name: Run SonarQube with Docker Compose

on: 
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: sonarqube scan
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
        docker-compose --version # Check if Docker Compose is installed

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Build and push
      uses: docker/build-push-action@v3
      with: 
        context: .
        push: false 

    - name: Run Docker Compose
      run: docker-compose up -d

    - name: Install SonarQube Scanner
      run: |
        wget -q -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner.zip
        export PATH=$PATH:$(pwd)/sonar-scanner-4.6.2.2472-linux/bin
        echo $PATH
        sonar-scanner --version # Verify the installation

    - name: Run SonarQube Scan
      run: | 
        sonar-scanner \
          -Dsonar.projectKey=your_project_key \
          -Dsonar.sources=. \
          -Dsonar.host.url=http://localhost:9000 \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} 
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
    - name: Save SonarQube Scan Results
      run: |
        mkdir -p sonarqube-results
        cp -r /opt/sonarqube/data/es6 sonarqube-results/ # This path depends on how SonarQube stores results
      continue-on-error: true
      
    - name: Commit results to repository
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add sonarqube-results
        git commit -m 'Add SonarQube scan results'
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
